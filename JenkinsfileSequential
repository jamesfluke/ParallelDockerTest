pipeline{
    agent {
        docker {
            image 'jamesafluke/miscrepo:alpine-with-docker'
        }
    }
    stages{
        
        stage("stageA"){
            agent {
                docker {
                    image 'jamesafluke/miscrepo:alpine-with-docker'
                }
            }
            steps{
                script {
                    sh "echo this is stageA"
                }
            }
        }
        stage("stageB"){
            agent {
                docker {
                    image 'jamesafluke/miscrepo:alpine-with-docker'
                }
            }
            steps{
                script {
                    sh "echo this is stageB"
                }
            }
        }
    }
}

def getComponent(){
    def components = ['componentA', 'componentB']
    return components
}

def generateJobs(components){
    def componentJobs = [:]
    components.each { component ->

        componentJobs[component] = {
            //place each in their own workspace to avoid shared file conflicts
            def mainWorkspace = WORKSPACE
            def componentWorkspace = "${WORKSPACE}/.component-stages/${component}"
            ws(componentWorkspace) {
                stage("Build ${component}") {
                    agent {
                        docker {
                            image 'hello-world'
                            // label ''
                            // args
                        }
                    }
                    sh "echo hello ${component}"
                    sleep 600
                }
            }
        }
    }
    return componentJobs
}